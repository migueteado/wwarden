// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                                String                              @id @default(uuid())
  username                          String                              @unique
  password                          String
  accounts                          Account[]
  groups                            Group[]
  createdAt                         DateTime                            @default(now())
  updatedAt                         DateTime                            @updatedAt
}

model Group {
  id                                String                              @id @default(uuid())
  name                              String                              @unique
  users                             User[]
  createdAt                         DateTime                            @default(now())
  updatedAt                         DateTime                            @updatedAt
}

model Account {
  id                                String                              @id @default(uuid())
  name                              String                              @unique
  userId                            String
  user                              User                                @relation(fields: [userId], references: [id])
  transactions                      Transaction[]                       
  createdAt                         DateTime                            @default(now())
  updatedAt                         DateTime                            @updatedAt
}

enum TransactionType {
  INCOME
  EXPENSE
  INTERNAL
}

model Categories {
  id                                String                              @id @default(uuid())
  type                              TransactionType
  name                              String                              @unique
  subcategories                     Subcategories[]
  transactions                      Transaction[]
  createdAt                         DateTime                            @default(now())
  updatedAt                         DateTime                            @updatedAt
}

model Subcategories {
  id                                String                              @id @default(uuid())
  categoryId                        String
  category                          Categories                          @relation(fields: [categoryId], references: [id])
  name                              String                              @unique
  transactions                      Transaction[]
  createdAt                         DateTime                            @default(now())
  updatedAt                         DateTime                            @updatedAt
}

model Transaction {
  id                                String                              @id @default(uuid())
  type                              TransactionType
  categoryId                        String
  category                          Categories                          @relation(fields: [categoryId], references: [id])
  subcategoryId                     String
  subcategory                       Subcategories                       @relation(fields: [subcategoryId], references: [id])
  entity                            String?
  description                       String
  reference                         String?
  amount                            Decimal
  currency                          String
  accountId                         String
  account                           Account                             @relation(fields: [accountId], references: [id])
  date                              DateTime
  sentTransactionId                 String?                             @unique       
  sentTransaction                   Transaction?                        @relation("InternalTransaction", fields: [sentTransactionId], references: [id])
  receivedTransaction               Transaction?                        @relation("InternalTransaction")
  createdAt                         DateTime                            @default(now())
  updatedAt                         DateTime                            @updatedAt
}